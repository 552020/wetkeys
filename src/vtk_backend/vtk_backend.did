type file_id = nat64;

// New types for register_file

type register_file_request = record {
  file_name : text;
  storage_provider : text;
  blob_id : opt text;
  requested_at : nat64;
  uploaded_at : opt nat64;
};

type register_file_response = record {
  file_id : file_id;
};

type file_metadata = record {
  file_id : file_id;
  file_name : text;
  file_status : file_status;
};

type file_status = variant {
  pending : record { alias : text; requested_at : nat64 };
  partially_uploaded;
  uploaded : record { uploaded_at : nat64 };
};

type user = record {
  // username : text;
  // public_key : blob;
  // ic_principal : principal;
};

type file_data = record {
  contents : blob;
  file_type : text;
  num_chunks : nat64;
};

type upload_file_request = record {
  name : text;
  content : blob;
  file_type : text;
  num_chunks : nat64;
};

type upload_file_atomic_request = record {
  name : text;
  content : blob;
  file_type : text;
  num_chunks : nat64;
};

type upload_file_continue_request = record {
  file_id : file_id;
  file_content : blob;
  file_type : text;
  num_chunks : nat64;
};


type upload_file_response = variant {
  Ok;
  Err : upload_file_error;
};

type upload_file_error = variant {
  already_uploaded;
  not_requested;
};

type download_file_response = variant {
  not_found_file;
  not_uploaded_file;
  permission_error;
  found_file : file_data;
};

type delete_file_response = variant {
     Ok;
     NotFound;
   };

service : {
  upload_file_atomic : (upload_file_atomic_request) -> (file_id);
  upload_file_continue : (upload_file_continue_request) -> (upload_file_response);
  download_file : (file_id : file_id, chunk_id : nat64) -> (download_file_response) query;
  list_files : () -> (vec file_metadata) query;
  greet : (name : text) -> (text) query;
  delete_file : (file_id : file_id) -> (delete_file_response);
  register_file : (register_file_request) -> (register_file_response);
}
